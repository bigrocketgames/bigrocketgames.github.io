---
layout: post
title:  "Recipe Saver Rails Project"
date:   2017-03-10 20:03:31 +0000
---


Like I have done with my 2 projects before this, I made a list of ideas, then I trimmed that list to the ideas I liked, and then began jotting down the things I felt I needed in this application to make it the way I wanted to see it run.  Then I took the list one more time and crossed off the ideas that felt above my pay grade currently, to save for perhaps one of the final couple of projects after this one.

The project I landed on, I knew would still present some challenges, as I wanted it to encompass some stuff that would push the boundaries of my knowledge so far based on what I have learned in the course.  I felt super well-prepared for this project, but I did know that getting the oAuth and Devise to work together would be a challenge.  It was a bit painful going through the lessons on that just to get everything talking to each other, and after Googling things and doing some research, it did seem like the interface with Facebook is a bit buggy for many people.  After getting Devise working initially, I then began to immediately dive into trying to get omniauth-facebook working as well, so I could get my major hurdle out of the way.  I spend 1-2 hours a night for a solid 4 nights trying to get the darn thing working with no success.  I finally decided to abandon my pursuit and move on with the other requirements of the project.

My next task to tackle was making sure I got the routes nested correctly and forms working for adding a new recipe.  I didn't want to just limit how ingredients could be in a recipe with a fixed number setting that created so many spots, so I decided to go ahead and do some more research.  I found a great tutorial on making a recipe app that included the use of a gem called cocoon.  It is a decent gem that allowed me to create a new set of ingredient fields or make the last disappear just at the click of a button.  I knew it could be done, I just didn't know how to do it myself, so I immediately went to work including this gem in my project and reading the documentation on how to properly implement it for my specific needs.  Within an hour I had things working how they were intended, and then it was on to my next challenge of implementing a class scope method.

I knew I needed Pundit, I just wasn't completely sure how I was going to make it work for my needs.  I had an idea in my head about how things would work, but quickly found that my idea and reality didn't jive well.  So it was back to the drawing board, which turned out to not be so bad.  Within 20 minutes of reading documentation and understanding how Pundit worked better, I had a new idea.  It involved tweaking my models and relationships a bit, but that wasn't anything I couldn't handle and I had already done it at least twice during the beginning phases of this project.

Finally, it was back to solving my Devise Omniauth issue.  This time I decided to go with Github instead of Facebook.  The setup was straight forward and it seemed like everything was working.  Within 20 minutes I had it connected and it was adding the user to my database, but for some reason, it was not signing in and redirecting properly.  It drove me nuts, constantly getting a 302 status and then back to the homepage.  I worked for another couple of good long nights on it.  I tried everything short of throwing my laptop (I have been told it helps work out bugs sometimes :) ).  Finally, I stepped back and took a break.  For week on to work on the next lessons in js, just to clear my head of this problem.  After a week of doing that, I decided it was time to come back and go through everything step by step once again.  Within 5 minutes of using pry, I finally found where my error was.  When calling the sign_in_and_redirect method, I was sending the wrong thing.  The redirect error was simply just a case of a simple oversight.  I had read the incorrect line of code so many times and never noticed the error.  After a week away from the problem, I was able to fix it in 15 minutes.  I went from wanting to throw my laptop away to almost throwing it in the air from excitement.  Finally the hard parts were complete, just needed to dry it up and get it submitted.  This was a great project.  It made me learn more and review more, so I feel that much more ready to tackle things in the real world once I graduate here.
